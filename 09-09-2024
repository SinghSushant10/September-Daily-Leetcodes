#2326. Spiral Matrix IV 

class Solution {
    public int[][] spiralMatrix(int m, int n, ListNode head) {
        int[][] matrix = new int[m][n];
        
        // Initialize the matrix with -1
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = -1;
            }
        }
        
        // Define boundaries for the spiral traversal
        int top = 0, bottom = m - 1;
        int left = 0, right = n - 1;
        
        // Pointer for linked list
        ListNode current = head;
        
        // Traverse the matrix in spiral order
        while (current != null && top <= bottom && left <= right) {
            
            // Traverse from left to right
            for (int i = left; i <= right && current != null; i++) {
                matrix[top][i] = current.val;
                current = current.next;
            }
            top++;
            
            // Traverse from top to bottom
            for (int i = top; i <= bottom && current != null; i++) {
                matrix[i][right] = current.val;
                current = current.next;
            }
            right--;
            
            // Traverse from right to left
            for (int i = right; i >= left && current != null; i--) {
                matrix[bottom][i] = current.val;
                current = current.next;
            }
            bottom--;
            
            // Traverse from bottom to top
            for (int i = bottom; i >= top && current != null; i--) {
                matrix[i][left] = current.val;
                current = current.next;
            }
            left++;
        }
        
        return matrix;
    }
}
